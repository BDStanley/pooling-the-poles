Konfederacja.thr.out <- sum(Konfederacja.thr > 0) / length(Konfederacja.thr)
Konfederacja.thr.out <- round(Konfederacja.thr.out, 2)
# calculate latest figures
posfr <- data.frame()
for (i in 1:length(pos)){
posfr <- pos[1:10000,]
}
posfrmelt <- melt(as.data.frame(posfr))
# SEAT SHARES
# enter most recent average level of support and reduce to zero if below electoral threshold
means_pos <- data.frame(means_pos)
for(i in 1:length(party)) {
if(means_pos[i,] > 4.99) {
means_pos[i,] <- means_pos[i,]
} else { means_pos[i,] <- 0
}
# reduce to zero if electoral coalitions below 8% threshold
# if(means_pos["Konfederacja",] > 7.99) {
# means_pos["Konfederacja",] <- means_pos["Konfederacja",]
# } else { means_pos["Konfederacja",] <- 0
# }
# if(means_pos["Lewica",] > 7.99) {
#   means_pos["Lewica",] <- means_pos["Lewica",]
# } else { means_pos["Lewica",] <- 0
# }
means_pos <- 100/(sum(means_pos))*means_pos
# define party percentage per district according to most recent poll, include MN manually
PiSpct <- round(weights$PiScoef*means_pos[1,], digits=2)
KOpct <- round(weights$KOcoef*means_pos[2,], digits=2)
PSLpct <- round(weights$PSLcoef*means_pos[3,], digits=2)
Lewicapct <- round(weights$Lewicacoef*means_pos[4,], digits=2)
Konfederacjapct <- round(weights$Konfcoef*means_pos[5,], digits=2)
MNpct <- c(0.18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8.14, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
# estimate number of votes per party per district based on 2015 turnout
KOest <- (weights$validvotes/100)*KOpct
PiSest <- (weights$validvotes/100)*PiSpct
PSLest <- (weights$validvotes/100)*PSLpct
Lewicaest <- (weights$validvotes/100)*Lewicapct
Konfederacjaest <- (weights$validvotes/100)*Konfederacjapct
MNest <- (weights$validvotes/100)*MNpct
# estimate seat shares for each district
poldHondt <- data.frame(KO=rep(1,42), Konfederacja=rep(1,42), Lewica=rep(1,42),  MN=rep(1,42), PiS=rep(1,42),
PSL=rep(1,42))
for( i in 1 : 42 ) {
poldHondt[i, ] <- dHondt(c("PiS", "KO", "PSL", "Lewica", "Konfederacja", "MN"),
c(PiSest[i], KOest[i], PSLest[i], Lewicaest[i], Konfederacjaest[i],
MNest[i]), weights$magnitude[i])
}
colnames(poldHondt) <- c("KO", "Konfederacja", "Lewica", "MN", "PiS", "PSL-Kukiz")
stlague <- data.frame(KO=rep(1,42), Konfederacja=rep(1,42), Lewica=rep(1,42),  MN=rep(1,42), PiS=rep(1,42),
PSL=rep(1,42))
for( i in 1 : 42 ) {
stlague[i,] <- c(giveseats(v = c(KOest[i], Konfederacjaest[i], Lewicaest[i], MNest[i], PiSest[i],
PSLest[i]), ns = weights$magnitude[i], method="sl", thresh=5))$seats
}
colnames(stlague) <- c("KO", "Konfederacja", "Lewica", "MN", "PiS", "PSL-Kukiz")
# create frame for plots
frame <- t(rbind(poldHondt[1,], colSums(poldHondt[2:42,])))
#frame <- t(rbind(stlague[1,], colSums(stlague[2:42,])))
frame <- data.frame(rownames(frame), frame)
colnames(frame) <- c("Party", "Unweighted", "Weighted")
frame <- frame[with(frame, order(-Weighted)),]
frame$in2015[frame$Party=="KO"] <- 166
frame$in2015[frame$Party=="PiS"] <- 235
frame$in2015[frame$Party=="Lewica"] <- 0
frame$in2015[frame$Party=="PSL-Kukiz"] <- 58
frame$in2015[frame$Party=="MN"] <- 1
frame$in2015[frame$Party=="Konfederacja"] <- 0
frame <- frame[frame$Weighted>0,]
frame$Party <- factor(frame$Party, levels=c("PiS", "KO", "PSL-Kukiz", "Lewica", "Konfederacja", "MN"))
frame$diffPres <- sprintf("%+d", (frame$Weighted - frame$in2015))
frame$diffPres <- sprintf("(%s)", frame$diffPres)
frame$diffPresUn <- sprintf("%+d", (frame$Unweighted - frame$in2015))
frame$diffPresUn <- sprintf("(%s)", frame$diffPresUn)
frame$Party <- reorder(frame$Party, -frame$Weighted)
## CREATE PLOTS
setwd('~/Google Drive/Resources/Polish materials/Plots')
#plot house effects
p <- ggplot() +
geom_abline(intercept=0, slope=0, colour="gray10", linetype=3) +
geom_pointrange(data=houseframe, mapping=aes(x=party, y=Mean, ymin=Lower95, ymax=Upper95, color=house, shape=method),
position = position_dodge(width=0.5)) +
guides(color=guide_legend(override.aes=list(shape=15, size=1, linetype=0)))+
labs(color="Pollster", shape="Mode", x="", y="Deviation from mean party vote share",
title="House and mode effects for national election polls, Poland",
caption = "@BDStanley; benstanley.org") +
scale_y_continuous(labels = scales::percent) +
theme_minimal() +
theme_ipsum_rc()
ggsave(p, file = "k1cols_houseeffects.png",
width = 7, height = 5, units = "cm", dpi = 320, scale = 4)
# plot most recent party support
p <- ggplot(posfrmelt, aes(y=variable, x = value, fill=variable)) +
geom_vline(aes(xintercept=0.05), colour="gray60", linetype="dotted") +
geom_vline(aes(xintercept=0.08), colour="gray60", linetype="dotted") +
geom_halfeyeh(color=NA, scale="width") +
annotate(geom = "text", label=paste(round(100*mean(posfrmelt$value[posfrmelt$variable=="PiS"]),0)),
y="PiS", x=mean(posfrmelt$value[posfrmelt$variable=="PiS"]), size=4, hjust = "center", vjust=-1,
family="Roboto Condensed", color="white") +
annotate(geom = "text", label=paste(round(100*mean(posfrmelt$value[posfrmelt$variable=="KO"]),0)),
y="KO", x=mean(posfrmelt$value[posfrmelt$variable=="KO"]), size=4, hjust = "center", vjust=-1,
family="Roboto Condensed", color="white") +
annotate(geom = "text", label=paste(round(100*mean(posfrmelt$value[posfrmelt$variable=="Lewica"]),0)),
y="Lewica", x=mean(posfrmelt$value[posfrmelt$variable=="Lewica"]), size=4, hjust = "center", vjust=-1,
family="Roboto Condensed", color="white") +
annotate(geom = "text", label=paste(round(100*mean(posfrmelt$value[posfrmelt$variable=="Konfederacja"]),0)),
y="Konfederacja", x=mean(posfrmelt$value[posfrmelt$variable=="Konfederacja"]), size=4, hjust = "center", vjust=-1,
family="Roboto Condensed", color="white") +
annotate(geom = "text", label=paste(round(100*mean(posfrmelt$value[posfrmelt$variable=="Other"]),0)),
y="Other", x=mean(posfrmelt$value[posfrmelt$variable=="Other"]), size=4, hjust = "center", vjust=-1,
family="Roboto Condensed", color="white") +
annotate(geom = "text", label=paste(round(100*mean(posfrmelt$value[posfrmelt$variable=="PSL-Kukiz"]),0)),
y="PSL-Kukiz", x=mean(posfrmelt$value[posfrmelt$variable=="PSL-Kukiz"]), size=4, hjust = "center", vjust=-1,
family="Roboto Condensed", color="white") +
annotate(geom = "text", label=paste("Pr(PiS > 50%)  = ", PiS.50.out), y=3, x=0.45, size=3.5, adj=c(0), family="Roboto Condensed") +
annotate(geom = "text", label=paste("Pr(PiS > KO)  = ", PiS.KO.diff.out), y=2.75, x=0.45, size=3.5, adj=c(0), family="Roboto Condensed") +
annotate(geom = "text", label=paste("Pr(Lewica > 5%)  = ", Lewica.thr.out), y=2.5, x=0.45, size=3.5, adj=c(0), family="Roboto Condensed") +
annotate(geom = "text", label=paste("Pr(Konfederacja > 5%)  = ", Konfederacja.thr.out), y=2.25, x=0.45, size=3.5, adj=c(0), family="Roboto Condensed") +
annotate(geom = "text", label=paste("Pr(PSL-Kukiz > 5%)  = ", PSL.thr.out), y=2, x=0.45, size=3.5, adj=c(0), family="Roboto Condensed") +
scale_y_discrete(name=" ", limits=rev(pooledframe$party)) +
scale_fill_manual(name=" ", values=k1cols, guide=FALSE) +
scale_x_continuous(breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5), labels=c("0", "10", "20", "30", "40", "50")) +
labs(caption="@BDStanley; benstanley.org", x="", title="Latest poll estimates, Poland",
subtitle="Estimated using polls published by IPSOS, IBRIS, Estymator, Kantar, Pollster, IBSP, CBOS and Social Changes") +
theme_minimal() +
theme_ipsum_rc()
ggsave(p, file = "k1cols_latest.png",
width = 7, height = 5, units = "cm", dpi = 320, scale = 4)
# plot trends
datl <- melt(plotdata, measure.vars=c("KOmean","PiSmean","Lewicamean","PSLmean","Konfederacjamean", "Othermean"))
levels(datl$variable) <- c("KO","PiS", "Lewica","PSL-Kukiz", "Konfederacja", "Other")
datl$variable <- factor(datl$variable, levels = c("PiS", "KO", "Lewica", "PSL-Kukiz", "Konfederacja", "Other"))
#datl_all <- datl[!(datl$variable %in% c("Other")),]
p <- ggplot(datl, aes(x=date, y=value, colour=factor(variable))) + geom_line() +
geom_abline(intercept=5, slope=0, colour="gray60", linetype=3) +
geom_ribbon(data=subset(datl, variable=="PiS"), aes(ymin=PiSlow, ymax=PiShigh), colour=NA, fill="blue4", alpha=0.3) +
geom_ribbon(data=subset(datl, variable=="KO"), aes(ymin=KOlow, ymax=KOhigh), colour=NA, fill="orange", alpha=0.3) +
geom_ribbon(data=subset(datl, variable=="Lewica"), aes(ymin=Lewicalow, ymax=Lewicahigh), colour=NA, fill="red", alpha=0.3) +
geom_ribbon(data=subset(datl, variable=="PSL-Kukiz"), aes(ymin=PSLlow, ymax=PSLhigh), colour=NA, fill="darkgreen", alpha=0.3) +
geom_ribbon(data=subset(datl, variable=="Konfederacja"), aes(ymin=Konfederacjalow, ymax=Konfederacjahigh), colour=NA, fill="goldenrod1", alpha=0.3) +
geom_ribbon(data=subset(datl, variable=="Other"), aes(ymin=Otherlow, ymax=Otherhigh), colour=NA, fill="grey50", alpha=0.3) +
geom_point(data=pollingdata, aes(x=as.Date(pollingdata$date, "%d/%m/%Y"), y=PiS), col="blue4", size=1.5) +
geom_point(data=pollingdata, aes(x=as.Date(pollingdata$date, "%d/%m/%Y"), y=KO), col="orange", size=1.5) +
geom_point(data=pollingdata, aes(x=as.Date(pollingdata$date, "%d/%m/%Y"), y=PSL), col="darkgreen", size=1.5) +
geom_point(data=pollingdata, aes(x=as.Date(pollingdata$date, "%d/%m/%Y"), y=Lewica), col="red", size=1.5) +
geom_point(data=pollingdata, aes(x=as.Date(pollingdata$date, "%d/%m/%Y"), y=Konfederacja), col="goldenrod1", size=1.5) +
geom_point(data=pollingdata, aes(x=as.Date(pollingdata$date, "%d/%m/%Y"), y=Other), col="gray50", size=1.5) +
theme(panel.background = element_rect(colour="white"),  axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10), axis.title.x = element_blank(), axis.title.y = element_blank(),
plot.margin = unit(c(1,3,1,1), "lines"), strip.text.x = element_text(size = 10))+
background_grid(major = "xy", minor = "none") +
scale_x_date(labels=date_format("%d.%m.%y"))+
scale_colour_manual(name="", values=k1cols,
breaks=c("PiS", "KO", "Lewica", "PSL-Kukiz", "Konfederacja", "Other"),
labels=c("PiS", "KO", "Lewica", "PSL-Kukiz", "Konfederacja", "Other")) +
guides(color=guide_legend(override.aes=list(fill=NA))) +
labs(x="", y="% of vote", title="Pooled poll trends for national elections, Poland", caption = "@BDStanley; benstanley.org") +
theme_minimal() +
theme_ipsum_rc()
ggsave(p, file = "k1cols_trends.png",
width = 7, height = 5, units = "cm", dpi = 320, scale = 4)
#current seat share
p <- ggplot(data=frame, mapping=aes(x=Party, y=Weighted, fill=Party)) +
geom_bar(stat="identity", width=.75, show.legend = F) +
geom_abline(intercept=231, slope=0, colour="gray10", linetype=3) +
geom_abline(intercept=276, slope=0, colour="gray10", linetype=3) +
geom_abline(intercept=307, slope=0, colour="gray10", linetype=3) +
scale_y_continuous('Number of seats', limits=c(0,320), breaks=c(0, 50, 100, 150, 200, 231, 276, 307)) +
scale_fill_manual(name="Party", values = k1cols)+
geom_label(aes(x=2, y=231), label="Legislative majority", size=3, adj=c(0), label.size=NA, fill="grey95", family="Roboto Condensed") +
geom_label(aes(x=2, y=276), label="Overturn presidential veto", size=3, adj=c(0), label.size=NA, fill="grey95", family="Roboto Condensed") +
geom_label(aes(x=2, y=307), label="Constitutional majority", size=3, adj=c(0), label.size=NA, fill="grey95", family="Roboto Condensed") +
annotate("text", x=frame$Party, y=c(frame$Weighted+18), label=frame$Weighted, size=4, family="Roboto Condensed")+
annotate("text", x=frame$Party, y=c(frame$Weighted+8), label=frame$diffPres, size=3, family="Roboto Condensed") +
labs(x="", y="% of vote", title="Estimated share of seats, Poland",
subtitle="Figures in brackets refer to change in seat share since 2015",
caption = "@BDStanley; benstanley.org") +
theme_minimal() +
theme_ipsum_rc()
ggsave(p, file = "k1cols_seats.png",
width = 7, height = 5, units = "cm", dpi = 320, scale = 4)
# seats table
seats <- cbind(poldHondt, weights)
row.names(seats) <- weights$name
keep <- c("KO","PiS","PSL-Kukiz","Lewica", "Konfederacja", "MN")
seats <- seats[keep]
#colnames(seats) <- sprintf("%-8s", colnames(seats))
seats <- seats[-1,]
seats$id <- 1:41
seats$PiSKO <-abs(seats$PiS-seats$KO)
seats$PiSmKO <- seats$PiS-seats$KO
#regional maps
const=readOGR("/Users/benstanley/Google Drive/Resources/Polish materials/Regional data/GRED_beta2_20170530_Poland/shapefile/GRED_Poland_2011_beta2.shp")
const@data$id = rownames(const@data)
const.points = fortify(const, region="id")
const.df = join(const.points, const@data, by="id")
const.df$con[const.df$id==0] <- 13
const.df$con[const.df$id==1] <- 12
const.df$con[const.df$id==2] <- 14
const.df$con[const.df$id==3] <- 15
const.df$con[const.df$id==4] <- 3
const.df$con[const.df$id==5] <- 2
const.df$con[const.df$id==6] <- 1
const.df$con[const.df$id==7] <- 11
const.df$con[const.df$id==8] <- 9
const.df$con[const.df$id==9] <- 10
const.df$con[const.df$id==10] <- 33
const.df$con[const.df$id==11] <- 37
const.df$con[const.df$id==12] <- 38
const.df$con[const.df$id==13] <- 36
const.df$con[const.df$id==14] <- 39
const.df$con[const.df$id==15] <- 4
const.df$con[const.df$id==16] <- 5
const.df$con[const.df$id==17] <- 6
const.df$con[const.df$id==18] <- 7
const.df$con[const.df$id==19] <- 8
const.df$con[const.df$id==20] <- 18
const.df$con[const.df$id==21] <- 16
const.df$con[const.df$id==22] <- 17
const.df$con[const.df$id==23] <- 20
const.df$con[const.df$id==24] <- 19
const.df$con[const.df$id==25] <- 21
const.df$con[const.df$id==26] <- 24
const.df$con[const.df$id==27] <- 26
const.df$con[const.df$id==28] <- 25
const.df$con[const.df$id==29] <- 30
const.df$con[const.df$id==30] <- 31
const.df$con[const.df$id==31] <- 27
const.df$con[const.df$id==32] <- 32
const.df$con[const.df$id==33] <- 29
const.df$con[const.df$id==34] <- 28
const.df$con[const.df$id==35] <- 23
const.df$con[const.df$id==36] <- 22
const.df$con[const.df$id==37] <- 34
const.df$con[const.df$id==38] <- 35
const.df$con[const.df$id==39] <- 41
const.df$con[const.df$id==40] <- 40
label_points <- coordinates(const)
colnames(label_points) <- c("x","y")
label_points <- data.frame(label_points)
seats$label_point_x[seats$id==12] <- label_points$x[2]
seats$label_point_y[seats$id==12] <- label_points$y[2]
seats$label_point_x[seats$id==13] <- label_points$x[1]
seats$label_point_y[seats$id==13] <- label_points$y[1]
seats$label_point_x[seats$id==14] <- label_points$x[3]
seats$label_point_y[seats$id==14] <- label_points$y[3]
seats$label_point_x[seats$id==15] <- label_points$x[4]
seats$label_point_y[seats$id==15] <- label_points$y[4]
seats$label_point_x[seats$id==3] <- label_points$x[5]
seats$label_point_y[seats$id==3] <- label_points$y[5]
seats$label_point_x[seats$id==2] <- label_points$x[6]
seats$label_point_y[seats$id==2] <- label_points$y[6]
seats$label_point_x[seats$id==1] <- label_points$x[7]
seats$label_point_y[seats$id==1] <- label_points$y[7]
seats$label_point_x[seats$id==11] <- label_points$x[8]
seats$label_point_y[seats$id==11] <- label_points$y[8]
seats$label_point_x[seats$id==9] <- label_points$x[9]
seats$label_point_y[seats$id==9] <- label_points$y[9]
seats$label_point_x[seats$id==10] <- label_points$x[10]
seats$label_point_y[seats$id==10] <- label_points$y[10]
seats$label_point_x[seats$id==33] <- label_points$x[11]
seats$label_point_y[seats$id==33] <- label_points$y[11]
seats$label_point_x[seats$id==37] <- label_points$x[12]
seats$label_point_y[seats$id==37] <- label_points$y[12]
seats$label_point_x[seats$id==38] <- label_points$x[13]
seats$label_point_y[seats$id==38] <- label_points$y[13]
seats$label_point_x[seats$id==36] <- label_points$x[14]
seats$label_point_y[seats$id==36] <- label_points$y[14]
seats$label_point_x[seats$id==39] <- label_points$x[15]
seats$label_point_y[seats$id==39] <- label_points$y[15]
seats$label_point_x[seats$id==4] <- label_points$x[16]
seats$label_point_y[seats$id==4] <- label_points$y[16]
seats$label_point_x[seats$id==5] <- label_points$x[17]
seats$label_point_y[seats$id==5] <- label_points$y[17]
seats$label_point_x[seats$id==6] <- label_points$x[18]
seats$label_point_y[seats$id==6] <- label_points$y[18]
seats$label_point_x[seats$id==7] <- label_points$x[19]+0.2
seats$label_point_y[seats$id==7] <- label_points$y[19]
seats$label_point_x[seats$id==8] <- label_points$x[20]+0.2
seats$label_point_y[seats$id==8] <- label_points$y[20]
seats$label_point_x[seats$id==18] <- label_points$x[21]+0.2
seats$label_point_y[seats$id==18] <- label_points$y[21]
seats$label_point_x[seats$id==16] <- label_points$x[22]
seats$label_point_y[seats$id==16] <- label_points$y[22]
seats$label_point_x[seats$id==17] <- label_points$x[23]
seats$label_point_y[seats$id==17] <- label_points$y[23]
seats$label_point_x[seats$id==20] <- label_points$x[24]-0.4
seats$label_point_y[seats$id==20] <- label_points$y[24]
seats$label_point_x[seats$id==19] <- label_points$x[25]
seats$label_point_y[seats$id==19] <- label_points$y[25]
seats$label_point_x[seats$id==21] <- label_points$x[26]
seats$label_point_y[seats$id==21] <- label_points$y[26]
seats$label_point_x[seats$id==24] <- label_points$x[27]
seats$label_point_y[seats$id==24] <- label_points$y[27]
seats$label_point_x[seats$id==26] <- label_points$x[28]
seats$label_point_y[seats$id==26] <- label_points$y[28]
seats$label_point_x[seats$id==25] <- label_points$x[29]
seats$label_point_y[seats$id==25] <- label_points$y[29]
seats$label_point_x[seats$id==30] <- label_points$x[30]
seats$label_point_y[seats$id==30] <- label_points$y[30]
seats$label_point_x[seats$id==31] <- label_points$x[31]
seats$label_point_y[seats$id==31] <- label_points$y[31]
seats$label_point_x[seats$id==27] <- label_points$x[32]
seats$label_point_y[seats$id==27] <- label_points$y[32]
seats$label_point_x[seats$id==32] <- label_points$x[33]
seats$label_point_y[seats$id==32] <- label_points$y[33]
seats$label_point_x[seats$id==29] <- label_points$x[34]
seats$label_point_y[seats$id==29] <- label_points$y[34]
seats$label_point_x[seats$id==28] <- label_points$x[35]
seats$label_point_y[seats$id==28] <- label_points$y[35]
seats$label_point_x[seats$id==23] <- label_points$x[36]
seats$label_point_y[seats$id==23] <- label_points$y[36]
seats$label_point_x[seats$id==22] <- label_points$x[37]+0.1
seats$label_point_y[seats$id==22] <- label_points$y[37]
seats$label_point_x[seats$id==34] <- label_points$x[38]
seats$label_point_y[seats$id==34] <- label_points$y[38]
seats$label_point_x[seats$id==35] <- label_points$x[39]
seats$label_point_y[seats$id==35] <- label_points$y[39]
seats$label_point_x[seats$id==41] <- label_points$x[40]
seats$label_point_y[seats$id==41] <- label_points$y[40]
seats$label_point_x[seats$id==40] <- label_points$x[41]
seats$label_point_y[seats$id==40] <- label_points$y[41]
const.df$id <- const.df$con
plotdata <- merge(const.df,seats,by="id")
p <- ggplot(plotdata) +
aes(long,lat,group=group,fill=as.integer(Lewica)) +
geom_polygon() +
geom_path(color="black") +
theme(aspect.ratio=1) +
scale_fill_gradient(name="Lewica", limits=c(min=0, max=20), low = "white", high = "red", guide="colorbar") +
geom_label(seats, mapping = aes(x=label_point_x, y=label_point_y, group=Lewica, label=Lewica), fill="white") +
theme_ipsum_rc(grid=FALSE, axis=FALSE, ticks=FALSE, axis_text_size = 0) + theme(aspect.ratio=1, legend.position="none",
axis.title.x = element_blank(), axis.title.y = element_blank()) +
labs(title="Constituency-level share of seats for Lewica", subtitle="Seat distribution reflects regional levels of support for SLD, Razem and Wiosna at 2019 European Parliament elections",
caption = "@BDStanley; benstanley.org", family="Roboto Condensed")
ggsave(p, file = "Lewica_seats.png",
width = 7, height = 7, units = "cm", dpi = 320, scale = 4)
p <- ggplot(plotdata) +
aes(long,lat,group=group,fill=as.integer(PiS)) +
geom_polygon() +
geom_path(color="black") +
theme(aspect.ratio=1) +
scale_fill_gradient(name="PiS", limits=c(min=0, max=20), low = "white", high = "blue4", guide="colorbar") +
geom_label(seats, mapping = aes(x=label_point_x, y=label_point_y, group=PiS, label=PiS), fill="white") +
theme_ipsum_rc(grid=FALSE, axis=FALSE, ticks=FALSE, axis_text_size = 0) + theme(aspect.ratio=1, legend.position="none",
axis.title.x = element_blank(), axis.title.y = element_blank()) +
labs(title="Constituency-level share of seats for PiS", subtitle="Seat distribution reflects regional levels of support for PiS at 2019 European Parliament elections",
caption = "@BDStanley; benstanley.org", family="Roboto Condensed")
ggsave(p, file = "PiS_seats.png",
width = 7, height = 7, units = "cm", dpi = 320, scale = 4)
p <- ggplot(plotdata) +
aes(long,lat,group=group,fill=as.integer(KO)) +
geom_polygon() +
geom_path(color="black") +
theme(aspect.ratio=1) +
scale_fill_gradient(name="KO", limits=c(min=0, max=20), low = "white", high = "orange", guide="colorbar") +
geom_label(seats, mapping = aes(x=label_point_x, y=label_point_y, group=KO, label=KO), fill="white") +
theme_ipsum_rc(grid=FALSE, axis=FALSE, ticks=FALSE, axis_text_size = 0) + theme(aspect.ratio=1, legend.position="none",
axis.title.x = element_blank(), axis.title.y = element_blank()) +
labs(title="Constituency-level share of seats for Koalicja Obywatelska", subtitle="Seat distribution reflects regional levels of support for Koalicja Europejska at 2019 European Parliament elections",
caption = "@BDStanley; benstanley.org", family="Roboto Condensed")
ggsave(p, file = "KO_seats.png",
width = 7, height = 7, units = "cm", dpi = 320, scale = 4)
p <- ggplot(plotdata) +
aes(long,lat,group=group,fill=as.integer(`PSL-Kukiz`)) +
geom_polygon() +
geom_path(color="black") +
theme(aspect.ratio=1) +
scale_fill_gradient(name="PSL-Kukiz", limits=c(min=0, max=20), low = "white", high = "darkgreen", guide="colorbar") +
geom_label(seats, mapping = aes(x=label_point_x, y=label_point_y, group=`PSL-Kukiz`, label=`PSL-Kukiz`), fill="white") +
theme_ipsum_rc(grid=FALSE, axis=FALSE, ticks=FALSE, axis_text_size = 0) + theme(aspect.ratio=1, legend.position="none",
axis.title.x = element_blank(), axis.title.y = element_blank()) +
labs(title="Constituency-level share of seats for PSL-Kukiz", subtitle="Seat distribution reflects regional levels of support for PSL at 2015 parliamentary elections",
caption = "@BDStanley; benstanley.org", family="Roboto Condensed")
ggsave(p, file = "PSL_seats.png",
width = 7, height = 7, units = "cm", dpi = 320, scale = 4)
p <- ggplot(plotdata) +
aes(long,lat,group=group,fill=as.integer(Konfederacja)) +
geom_polygon() +
geom_path(color="black") +
theme(aspect.ratio=1) +
scale_fill_gradient(name="Konfederacja", limits=c(min=0, max=20), low = "white", high = "goldenrod1", guide="colorbar") +
geom_label(seats, mapping = aes(x=label_point_x, y=label_point_y, group=Konfederacja, label=Konfederacja), fill="white") +
theme_ipsum_rc(grid=FALSE, axis=FALSE, ticks=FALSE, axis_text_size = 0) + theme(aspect.ratio=1, legend.position="none",
axis.title.x = element_blank(), axis.title.y = element_blank()) +
labs(title="Constituency-level share of seats for Konfederacja", subtitle="Seat distribution reflects regional levels of support for Konfederacja at 2019 European Parliament elections",
caption = "@BDStanley; benstanley.org", family="Roboto Condensed")
ggsave(p, file = "Konf_seats.png",
width = 7, height = 7, units = "cm", dpi = 320, scale = 4)
p <- ggplot(plotdata) +
aes(long,lat,group=group,fill=as.integer(PiSmKO)) +
geom_polygon() +
geom_path(color="black") +
theme_ipsum_rc(grid=FALSE, axis=FALSE, ticks=FALSE, axis_text_size = 0) + theme(aspect.ratio=1, legend.position="none",
axis.title.x = element_blank(), axis.title.y = element_blank()) +
scale_fill_gradient2(name="PiSKO", limits=c(min=-20, max=20), low = "orange", mid="white", high = "blue4", midpoint=0, guide="colorbar") +
geom_label(seats, mapping = aes(x=label_point_x, y=label_point_y, group=PiSKO, label=PiSKO), fill="white") +
labs(title="Constituency-level differences in share of seats for PiS and Koalicja Obywatelska", subtitle="Constituencies in shades of blue have more PiS MPs; constituencies in orange have more KO MPs",
caption = "@BDStanley; benstanley.org", family="Roboto Condensed")
ggsave(p, file = "PiSKO_seats.png",
width = 7, height = 7, units = "cm", dpi = 320, scale = 4)
seattable <- tibble(rownames(seats), seats[,2], seats[,1], seats[,4], seats[,3], seats[,5], seats[,6])
colnames(seattable) <- c("Constituency", "PiS", "KO", "Lewica", "PSL-Kukiz", "Konf.", "MN")
hlines <- c(-1, 0, nrow(seattable))
print(xtable(seattable, type = "latex", digits=0, align=c("l","l","c","c","c","c","c","c")), hline.after=hlines, booktabs=TRUE,
include.rownames=FALSE, file='seat_table.tex')
# kable(seattable, format = "latex", booktabs=TRUE, longtable=TRUE) %>%
#   column_spec(column=c(2:7), width = "5em", monospace = TRUE) %>%
#   column_spec(column=c(1), width = "15em", monospace = TRUE, italic=TRUE) %>%
#   kable_styling(bootstrap_options = "striped", full_width = FALSE)
save.image("~/Desktop/Personal/PoolingthePoles.RData")
library(tidyverse); library(readxl); library(cowplot); library(janitor)
relrows <- c(9:40)
data <- read_excel('/Users/benstanley/Google Drive/Freelancing/TNS Opinion reports/PO 235194065 Oct 2019/ebs_498_vol_A/ebs_498_vol_A.xls',
sheet="QD16", range = cell_rows(relrows))
data <- as_tibble(cbind(nms = names(data), t(data)))
colnames(data) <- data[1,]
data <- data[-1,]
data$country <- data$...1
data <- data[-2,]
data <- subset(data, country!="D-W")
data <- subset(data, country!="D-E")
data <- remove_empty(data)
data$plot <- as.numeric(unlist(data[,16]))
data$plot <- data$plot*100
library(tidyverse); library(readxl); library(cowplot); library(janitor)
relrows <- c(9:40)
data <- read_excel('/Users/benstanley/Google Drive/Freelancing/TNS Opinion reports/PO 235194065 Oct 2019/ebs_498_vol_A/ebs_498_vol_A.xls',
sheet="QD16", range = cell_rows(relrows))
data <- as_tibble(cbind(nms = names(data), t(data)))
colnames(data) <- data[1,]
data <- data[-1,]
data$country <- data$...1
data <- data[-2,]
data <- subset(data, country!="D-W")
data <- subset(data, country!="D-E")
data <- remove_empty(data)
data$plot <- as.numeric(unlist(data[,4]))
data$plot <- data$plot*100
distribplot <- ggplot(data, aes(reorder(country, plot), plot)) +
geom_bar(stat="identity", aes(fill = plot>=50)) +
geom_text(stat = "identity", aes(label = plot), vjust=-1)
majority <- sum(with(data[2:29,], table(country[plot>=50])))
minority <- sum(with(data[2:29,], table(country[plot<50])))
aboveEU <- sum(with(data[2:29,], table(country[plot>c(data$plot[1])])))
belowEU <- sum(with(data[2:29,], table(country[plot<c(data$plot[1])])))
below40 <- sum(with(data[2:29,], table(country[plot<40])))
below33 <- sum(with(data[2:29,], table(country[plot<33])))
below30 <- sum(with(data[2:29,], table(country[plot<30])))
below25 <- sum(with(data[2:29,], table(country[plot<25])))
below20 <- sum(with(data[2:29,], table(country[plot<20])))
below10 <- sum(with(data[2:29,], table(country[plot<10])))
above60 <- sum(with(data[2:29,], table(country[plot>60])))
above66 <- sum(with(data[2:29,], table(country[plot>66])))
above70 <- sum(with(data[2:29,], table(country[plot>70])))
above75 <- sum(with(data[2:29,], table(country[plot>75])))
above80 <- sum(with(data[2:29,], table(country[plot>80])))
above90 <- sum(with(data[2:29,], table(country[plot>90])))
distrib <- rbind(majority, minority, aboveEU, belowEU, below10, below20, below25,
below30, below33, below40, above60, above66, above70, above75, above80, above90)
print(distrib)
print(distribplot)
library(tidyverse); library(readxl); library(cowplot); library(janitor)
relrows <- c(9:40)
data <- read_excel('/Users/benstanley/Google Drive/Freelancing/TNS Opinion reports/PO 235194065 Oct 2019/ebs_498_vol_A/ebs_498_vol_A.xls',
sheet="QD1", range = cell_rows(relrows))
data <- as_tibble(cbind(nms = names(data), t(data)))
colnames(data) <- data[1,]
data <- data[-1,]
data$country <- data$...1
data <- data[-2,]
data <- subset(data, country!="D-W")
data <- subset(data, country!="D-E")
data <- remove_empty(data)
library(tidyverse); library(readxl); library(cowplot); library(janitor)
relrows <- c(9:40)
data <- read_excel('/Users/benstanley/Google Drive/Freelancing/TNS Opinion reports/PO 235194065 Oct 2019/ebs_498_vol_A/ebs_498_vol_A.xls',
sheet="QD1R", range = cell_rows(relrows))
data <- as_tibble(cbind(nms = names(data), t(data)))
colnames(data) <- data[1,]
data <- data[-1,]
data$country <- data$...1
data <- data[-2,]
data <- subset(data, country!="D-W")
data <- subset(data, country!="D-E")
data <- remove_empty(data)
data$plot <- as.numeric(unlist(data[,4]))
data$plot <- data$plot*100
distribplot <- ggplot(data, aes(reorder(country, plot), plot)) +
geom_bar(stat="identity", aes(fill = plot>=50)) +
geom_text(stat = "identity", aes(label = plot), vjust=-1)
majority <- sum(with(data[2:29,], table(country[plot>=50])))
minority <- sum(with(data[2:29,], table(country[plot<50])))
aboveEU <- sum(with(data[2:29,], table(country[plot>c(data$plot[1])])))
belowEU <- sum(with(data[2:29,], table(country[plot<c(data$plot[1])])))
below40 <- sum(with(data[2:29,], table(country[plot<40])))
below33 <- sum(with(data[2:29,], table(country[plot<33])))
below30 <- sum(with(data[2:29,], table(country[plot<30])))
below25 <- sum(with(data[2:29,], table(country[plot<25])))
below20 <- sum(with(data[2:29,], table(country[plot<20])))
below10 <- sum(with(data[2:29,], table(country[plot<10])))
above60 <- sum(with(data[2:29,], table(country[plot>60])))
above66 <- sum(with(data[2:29,], table(country[plot>66])))
above70 <- sum(with(data[2:29,], table(country[plot>70])))
above75 <- sum(with(data[2:29,], table(country[plot>75])))
above80 <- sum(with(data[2:29,], table(country[plot>80])))
above90 <- sum(with(data[2:29,], table(country[plot>90])))
distrib <- rbind(majority, minority, aboveEU, belowEU, below10, below20, below25,
below30, below33, below40, above60, above66, above70, above75, above80, above90)
print(distrib)
print(distribplot)
