const.df$con[const.df$id==3] <- 15
const.df$con[const.df$id==4] <- 3
const.df$con[const.df$id==5] <- 2
const.df$con[const.df$id==6] <- 1
const.df$con[const.df$id==7] <- 11
const.df$con[const.df$id==8] <- 9
const.df$con[const.df$id==9] <- 10
const.df$con[const.df$id==10] <- 33
const.df$con[const.df$id==11] <- 37
const.df$con[const.df$id==12] <- 38
const.df$con[const.df$id==13] <- 36
const.df$con[const.df$id==14] <- 39
const.df$con[const.df$id==15] <- 4
const.df$con[const.df$id==16] <- 5
const.df$con[const.df$id==17] <- 6
const.df$con[const.df$id==18] <- 7
const.df$con[const.df$id==19] <- 8
const.df$con[const.df$id==20] <- 18
const.df$con[const.df$id==21] <- 16
const.df$con[const.df$id==22] <- 17
const.df$con[const.df$id==23] <- 20
const.df$con[const.df$id==24] <- 19
const.df$con[const.df$id==25] <- 21
const.df$con[const.df$id==26] <- 24
const.df$con[const.df$id==27] <- 26
const.df$con[const.df$id==28] <- 25
const.df$con[const.df$id==29] <- 30
const.df$con[const.df$id==30] <- 31
const.df$con[const.df$id==31] <- 27
const.df$con[const.df$id==32] <- 32
const.df$con[const.df$id==33] <- 29
const.df$con[const.df$id==34] <- 28
const.df$con[const.df$id==35] <- 23
const.df$con[const.df$id==36] <- 22
const.df$con[const.df$id==37] <- 34
const.df$con[const.df$id==38] <- 35
const.df$con[const.df$id==39] <- 41
const.df$con[const.df$id==40] <- 40
label_points <- coordinates(const)
colnames(label_points) <- c("x","y")
label_points <- data.frame(label_points)
seats$label_point_x[seats$id==12] <- label_points$x[2]
seats$label_point_y[seats$id==12] <- label_points$y[2]
seats$label_point_x[seats$id==13] <- label_points$x[1]
seats$label_point_y[seats$id==13] <- label_points$y[1]
seats$label_point_x[seats$id==14] <- label_points$x[3]
seats$label_point_y[seats$id==14] <- label_points$y[3]
seats$label_point_x[seats$id==15] <- label_points$x[4]
seats$label_point_y[seats$id==15] <- label_points$y[4]
seats$label_point_x[seats$id==3] <- label_points$x[5]
seats$label_point_y[seats$id==3] <- label_points$y[5]
seats$label_point_x[seats$id==2] <- label_points$x[6]
seats$label_point_y[seats$id==2] <- label_points$y[6]
seats$label_point_x[seats$id==1] <- label_points$x[7]
seats$label_point_y[seats$id==1] <- label_points$y[7]
seats$label_point_x[seats$id==11] <- label_points$x[8]
seats$label_point_y[seats$id==11] <- label_points$y[8]
seats$label_point_x[seats$id==9] <- label_points$x[9]
seats$label_point_y[seats$id==9] <- label_points$y[9]
seats$label_point_x[seats$id==10] <- label_points$x[10]
seats$label_point_y[seats$id==10] <- label_points$y[10]
seats$label_point_x[seats$id==33] <- label_points$x[11]
seats$label_point_y[seats$id==33] <- label_points$y[11]
seats$label_point_x[seats$id==37] <- label_points$x[12]
seats$label_point_y[seats$id==37] <- label_points$y[12]
seats$label_point_x[seats$id==38] <- label_points$x[13]
seats$label_point_y[seats$id==38] <- label_points$y[13]
seats$label_point_x[seats$id==36] <- label_points$x[14]
seats$label_point_y[seats$id==36] <- label_points$y[14]
seats$label_point_x[seats$id==39] <- label_points$x[15]
seats$label_point_y[seats$id==39] <- label_points$y[15]
seats$label_point_x[seats$id==4] <- label_points$x[16]
seats$label_point_y[seats$id==4] <- label_points$y[16]
seats$label_point_x[seats$id==5] <- label_points$x[17]
seats$label_point_y[seats$id==5] <- label_points$y[17]
seats$label_point_x[seats$id==6] <- label_points$x[18]
seats$label_point_y[seats$id==6] <- label_points$y[18]
seats$label_point_x[seats$id==7] <- label_points$x[19]+0.2
seats$label_point_y[seats$id==7] <- label_points$y[19]
seats$label_point_x[seats$id==8] <- label_points$x[20]+0.2
seats$label_point_y[seats$id==8] <- label_points$y[20]
seats$label_point_x[seats$id==18] <- label_points$x[21]+0.2
seats$label_point_y[seats$id==18] <- label_points$y[21]
seats$label_point_x[seats$id==16] <- label_points$x[22]
seats$label_point_y[seats$id==16] <- label_points$y[22]
seats$label_point_x[seats$id==17] <- label_points$x[23]
seats$label_point_y[seats$id==17] <- label_points$y[23]
seats$label_point_x[seats$id==20] <- label_points$x[24]-0.4
seats$label_point_y[seats$id==20] <- label_points$y[24]
seats$label_point_x[seats$id==19] <- label_points$x[25]
seats$label_point_y[seats$id==19] <- label_points$y[25]
seats$label_point_x[seats$id==21] <- label_points$x[26]
seats$label_point_y[seats$id==21] <- label_points$y[26]
seats$label_point_x[seats$id==24] <- label_points$x[27]
seats$label_point_y[seats$id==24] <- label_points$y[27]
seats$label_point_x[seats$id==26] <- label_points$x[28]
seats$label_point_y[seats$id==26] <- label_points$y[28]
seats$label_point_x[seats$id==25] <- label_points$x[29]
seats$label_point_y[seats$id==25] <- label_points$y[29]
seats$label_point_x[seats$id==30] <- label_points$x[30]
seats$label_point_y[seats$id==30] <- label_points$y[30]
seats$label_point_x[seats$id==31] <- label_points$x[31]
seats$label_point_y[seats$id==31] <- label_points$y[31]
seats$label_point_x[seats$id==27] <- label_points$x[32]
seats$label_point_y[seats$id==27] <- label_points$y[32]
seats$label_point_x[seats$id==32] <- label_points$x[33]
seats$label_point_y[seats$id==32] <- label_points$y[33]
seats$label_point_x[seats$id==29] <- label_points$x[34]
seats$label_point_y[seats$id==29] <- label_points$y[34]
seats$label_point_x[seats$id==28] <- label_points$x[35]
seats$label_point_y[seats$id==28] <- label_points$y[35]
seats$label_point_x[seats$id==23] <- label_points$x[36]
seats$label_point_y[seats$id==23] <- label_points$y[36]
seats$label_point_x[seats$id==22] <- label_points$x[37]+0.1
seats$label_point_y[seats$id==22] <- label_points$y[37]
seats$label_point_x[seats$id==34] <- label_points$x[38]
seats$label_point_y[seats$id==34] <- label_points$y[38]
seats$label_point_x[seats$id==35] <- label_points$x[39]
seats$label_point_y[seats$id==35] <- label_points$y[39]
seats$label_point_x[seats$id==41] <- label_points$x[40]
seats$label_point_y[seats$id==41] <- label_points$y[40]
seats$label_point_x[seats$id==40] <- label_points$x[41]
seats$label_point_y[seats$id==40] <- label_points$y[41]
const.df$id <- const.df$con
plotdata <- merge(const.df,seats,by="id")
p_p2050 <- ggplot(plotdata) +
aes(long,lat,group=group,fill=as.integer(`Polska 2050`)) +
geom_polygon() +
geom_path(color="black") +
theme(aspect.ratio=1) +
scale_fill_gradient(name="Polska 2050", limits=c(min=0, max=20), low = "white", high = "darkgoldenrod", guide="colorbar") +
geom_label(seats, mapping = aes(x=label_point_x, y=label_point_y, group=`Polska 2050`, label=`Polska 2050`), fill="white", family="Roboto Condensed Light") +
labs(title="Constituency-level share of seats for Polska 2050", subtitle="Seat distribution reflects regional levels of support for Szymon HoÅ‚ownia at 2020 presidential election",
caption = "Ben Stanley (@BDStanley; benstanley.org). Model based on code written by Jack Bailey (@PoliSciJack).", family="Roboto Condensed") +
theme_ipsum_rc(grid=FALSE, axis=FALSE, ticks=FALSE, axis_text_size = 0) +
theme_changes_map
ggsave(p_p2050, file = "Polska_2050_seats.png",
width = 7, height = 7, units = "cm", dpi = 320, scale = 4)
p_lewica <- ggplot(plotdata) +
aes(long,lat,group=group,fill=as.integer(Lewica)) +
geom_polygon() +
geom_path(color="black") +
theme(aspect.ratio=1) +
scale_fill_gradient(name="Lewica", limits=c(min=0, max=20), low = "white", high = "red", guide="colorbar") +
geom_label(seats, mapping = aes(x=label_point_x, y=label_point_y, group=Lewica, label=Lewica), fill="white", family="Roboto Condensed Light") +
labs(title="Constituency-level share of seats for Lewica", subtitle="Seat distribution reflects regional levels of support at October 2019 election",
caption = "Ben Stanley (@BDStanley; benstanley.org). Model based on code written by Jack Bailey (@PoliSciJack).", family="Roboto Condensed") +
theme_ipsum_rc(grid=FALSE, axis=FALSE, ticks=FALSE, axis_text_size = 0) +
theme_changes_map
ggsave(p_lewica, file = "Lewica_seats.png",
width = 7, height = 7, units = "cm", dpi = 320, scale = 4)
p_pis <- ggplot(plotdata) +
aes(long,lat,group=group,fill=as.integer(PiS)) +
geom_polygon() +
geom_path(color="black") +
theme(aspect.ratio=1) +
scale_fill_gradient(name="PiS", limits=c(min=0, max=20), low = "white", high = "blue4", guide="colorbar") +
geom_label(seats, mapping = aes(x=label_point_x, y=label_point_y, group=PiS, label=PiS), fill="white", family="Roboto Condensed Light") +
labs(title="Constituency-level share of seats for PiS", subtitle="Seat distribution reflects regional levels of support at October 2019 election",
caption = "Ben Stanley (@BDStanley; benstanley.org). Model based on code written by Jack Bailey (@PoliSciJack).", family="Roboto Condensed")+
theme_ipsum_rc(grid=FALSE, axis=FALSE, ticks=FALSE, axis_text_size = 0) +
theme_changes_map
ggsave(p_pis, file = "PiS_seats.png",
width = 7, height = 7, units = "cm", dpi = 320, scale = 4)
p_ko <- ggplot(plotdata) +
aes(long,lat,group=group,fill=as.integer(KO)) +
geom_polygon() +
geom_path(color="black") +
theme(aspect.ratio=1) +
scale_fill_gradient(name="KO", limits=c(min=0, max=20), low = "white", high = "orange", guide="colorbar") +
geom_label(seats, mapping = aes(x=label_point_x, y=label_point_y, group=KO, label=KO), fill="white", family="Roboto Condensed Light") +
labs(title="Constituency-level share of seats for Koalicja Obywatelska", subtitle="Seat distribution reflects regional levels of support at October 2019 election",
caption = "Ben Stanley (@BDStanley; benstanley.org). Model based on code written by Jack Bailey (@PoliSciJack).", family="Roboto Condensed")+
theme_ipsum_rc(grid=FALSE, axis=FALSE, ticks=FALSE, axis_text_size = 0) +
theme_changes_map
ggsave(p_ko, file = "KO_seats.png",
width = 7, height = 7, units = "cm", dpi = 320, scale = 4)
p_psl <- ggplot(plotdata) +
aes(long,lat,group=group,fill=as.integer(PSL)) +
geom_polygon() +
geom_path(color="black") +
theme(aspect.ratio=1) +
scale_fill_gradient(name="PSL", limits=c(min=0, max=20), low = "white", high = "darkgreen", guide="colorbar") +
geom_label(seats, mapping = aes(x=label_point_x, y=label_point_y, group=PSL, label=PSL), fill="white", family="Roboto Condensed Light") +
labs(title="Constituency-level share of seats for PSL", subtitle="Seat distribution reflects regional levels of support at October 2019 election",
caption = "Ben Stanley (@BDStanley; benstanley.org). Model based on code written by Jack Bailey (@PoliSciJack).", family="Roboto Condensed")+
theme_ipsum_rc(grid=FALSE, axis=FALSE, ticks=FALSE, axis_text_size = 0) +
theme_changes_map
ggsave(p_psl, file = "PSL_seats.png",
width = 7, height = 7, units = "cm", dpi = 320, scale = 4)
p_konf <- ggplot(plotdata) +
aes(long,lat,group=group,fill=as.integer(Konfederacja)) +
geom_polygon() +
geom_path(color="black") +
theme(aspect.ratio=1) +
scale_fill_gradient(name="Konfederacja", limits=c(min=0, max=20), low = "white", high = "midnightblue", guide="colorbar") +
geom_label(seats, mapping = aes(x=label_point_x, y=label_point_y, group=Konfederacja, label=Konfederacja), fill="white", family="Roboto Condensed Light") +
labs(title="Constituency-level share of seats for Konfederacja", subtitle="Seat distribution reflects regional levels of support at October 2019 election",
caption = "Ben Stanley (@BDStanley; benstanley.org). Model based on code written by Jack Bailey (@PoliSciJack).", family="Roboto Condensed")+
theme_ipsum_rc(grid=FALSE, axis=FALSE, ticks=FALSE, axis_text_size = 0) +
theme_changes_map
ggsave(p_konf, file = "Konf_seats.png",
width = 7, height = 7, units = "cm", dpi = 320, scale = 4)
p_pis_ko <- ggplot(plotdata) +
aes(long,lat,group=group,fill=as.integer(PiSmKO)) +
geom_polygon() +
geom_path(color="black") +
scale_fill_gradient2(name="PiSKO", limits=c(min=-20, max=20), low = "orange", mid="white", high = "blue4", midpoint=0, guide="colorbar") +
geom_label(seats, mapping = aes(x=label_point_x, y=label_point_y, group=PiSKO, label=PiSKO), fill="white", family="Roboto Condensed Light") +
labs(title="Constituency-level differences in share of seats for PiS and Koalicja Obywatelska", subtitle="Constituencies in shades of blue have more PiS MPs; constituencies in orange have more KO MPs",
caption = "Ben Stanley (@BDStanley; benstanley.org). Model based on code written by Jack Bailey (@PoliSciJack).", family="Roboto Condensed")+
theme_ipsum_rc(grid=FALSE, axis=FALSE, ticks=FALSE, axis_text_size = 0) +
theme_changes_map
ggsave(p_pis_ko, file = "PiSKO_seats.png",
width = 7, height = 7, units = "cm", dpi = 320, scale = 4)
#####House effects#####
houselevels <- get_labels(droplevels(polls$org))
PiS_house <- as_tibble(as.data.frame(ranef(m1, summary=F)), repair_names("minimal")) %>%
select(.,contains("PiS")) %>%
setNames(houselevels) %>%
mutate(party="PiS")
KO_house <- as_tibble(as.data.frame(ranef(m1, summary=F)), repair_names("minimal")) %>%
select(.,contains("KO", ignore.case = F)) %>%
setNames(houselevels) %>%
mutate(party="KO")
`PSL_house` <- as_tibble(as.data.frame(ranef(m1, summary=F)), repair_names("minimal")) %>%
select(.,contains("PSL", ignore.case = F)) %>%
setNames(houselevels) %>%
mutate(party="PSL")
Lewica_house <- as_tibble(as.data.frame(ranef(m1, summary=F)), repair_names("minimal")) %>%
select(.,contains("Lewica", ignore.case = F)) %>%
setNames(houselevels) %>%
mutate(party="Lewica")
Konfederacja_house <- as_tibble(as.data.frame(ranef(m1, summary=F)), repair_names("minimal")) %>%
select(.,contains("Konfederacja", ignore.case = F)) %>%
setNames(houselevels) %>%
mutate(party="Konfederacja")
`Polska 2050_house` <- as_tibble(as.data.frame(ranef(m1, summary=F)), repair_names("minimal")) %>%
select(.,contains("Polska2050", ignore.case = F)) %>%
setNames(houselevels) %>%
mutate(party="Polska 2050")
p_house <- bind_rows(PiS_house, KO_house, `PSL_house`, Lewica_house, Konfederacja_house, `Polska 2050_house`) %>%
pivot_longer(., cols=where(is.numeric), names_to="house") %>%
separate(., house, c("house", "method"), sep="_") %>%
ggplot(aes(x = party, y = 10*value, color=house, shape=method)) +
geom_abline(intercept=0, slope=0, colour="gray10", linetype=3) +
stat_pointinterval(position = position_dodge(width = .7)) +
guides(color = guide_legend(override.aes = list(size = 5, shape="|"), keywidth=0.3, keyheight=0.3, default.unit="inch")) +
guides(shape = guide_legend(override.aes = list(size = 5, linetype=NULL), keywidth=0.3, keyheight=0.3, default.unit="inch")) +
labs(color="Pollster", shape="Mode", x="", y="Deviation from mean party vote share (percent)",
title="House and mode effects",
caption = "Ben Stanley (@BDStanley; benstanley.org). Model based on code written by Jack Bailey (@PoliSciJack).") +
theme_minimal() +
theme_ipsum_rc() +
theme_changes
ggsave(p_house, file = "p_house.png",
width = 7, height = 5, units = "cm", dpi = 320, scale = 4)
#####INCLUDING DON'T KNOWS#####
polls <- read_excel('polldata.xlsx')
polls <- unite(polls, org, remark, col="org", sep="_")
polls$org <-as.factor(polls$org)
polls$startDate <- as.Date(polls$startDate)
polls$endDate <- as.Date(polls$endDate)
polls <- unite(polls, org, remark, col="org", sep="_")
polls$org <-as.factor(polls$org)
polls$startDate <- as.Date(polls$startDate)
polls$endDate <- as.Date(polls$endDate)
polls <-
polls %>%
mutate(midDate = as.Date(startDate + (difftime(endDate, startDate)/2)),
midDate_int=as.integer(midDate)) %>%
#filter(midDate_int > (max(midDate_int)-150)) %>%
mutate(PSL = PSL,
Polska2050 = `Polska 2050`,
time = as.integer(difftime(midDate, min(midDate), units = "days")),
pollster = as.integer(factor(org)))
cols <- c("PiS"="blue4", "KO"="orange", "PSL"="darkgreen", "Konfederacja" = "midnightblue", "Lewica" = "red",
"MN" = "yellow", "Other"="gray50", "Polska 2050"="darkgoldenrod", "Don't know" = "gray50")
names <- data.frame(as.factor(get_labels(polls$org)))
names <- separate(names, as.factor.get_labels.polls.org.., c("house", "method"), sep="_")
names$house <- as.factor(names$house)
housenames <- fct_recode(names$house, "Kantar" = "Kantar") %>%
fct_collapse(., Kantar=c("Kantar"))
names <- paste0(get_labels(housenames), collapse=", ")
polls <-
polls %>%
mutate(time = interval(min(midDate), midDate)/years(1))
polls[names(polls) %in% c("PiS", "KO", "Lewica", "PSL", "Konfederacja", "Polska2050", "DK")] <-
polls[names(polls) %in% c("PiS", "KO", "Lewica", "PSL", "Konfederacja", "Polska2050", "DK")] %>%
mutate_all(function(x) (as.numeric(str_remove(x, "%"))/100)-0.001) #to ensure no zeroes in model
polls <-
polls %>%
mutate(DK = 1 - c(PiS + KO + Lewica + PSL + Konfederacja + Polska2050))
polls <-
polls %>%
mutate(
outcome = as.matrix(polls[names(polls) %in% c("PiS", "KO", "Lewica", "PSL", "Konfederacja", "Polska2050", "DK")])
)
m1 <-
brm(formula = bf(outcome ~ 1 + s(time, k = 10) + (1 | pollster)),
family = dirichlet(link = "logit", refcat = "PSL"),
prior =
prior(normal(0, 1.5), class = "Intercept", dpar = "muPiS") +
prior(normal(0, 0.5), class = "b", dpar = "muPiS") +
prior(exponential(2), class = "sd", dpar = "muPiS") +
prior(exponential(2), class = "sds", dpar = "muPiS") +
prior(normal(0, 1.5), class = "Intercept", dpar = "muKO") +
prior(normal(0, 0.5), class = "b", dpar = "muKO") +
prior(exponential(2), class = "sd", dpar = "muKO") +
prior(exponential(2), class = "sds", dpar = "muKO") +
prior(normal(0, 1.5), class = "Intercept", dpar = "muLewica") +
prior(normal(0, 0.5), class = "b", dpar = "muLewica") +
prior(exponential(2), class = "sd", dpar = "muLewica") +
prior(exponential(2), class = "sds", dpar = "muLewica") +
prior(normal(0, 1.5), class = "Intercept", dpar = "muDK") +
prior(normal(0, 0.5), class = "b", dpar = "muDK") +
prior(exponential(2), class = "sd", dpar = "muDK") +
prior(exponential(2), class = "sds", dpar = "muDK") +
prior(normal(0, 1.5), class = "Intercept", dpar = "muKonfederacja") +
prior(normal(0, 0.5), class = "b", dpar = "muKonfederacja") +
prior(exponential(2), class = "sd", dpar = "muKonfederacja") +
prior(exponential(2), class = "sds", dpar = "muKonfederacja") +
prior(normal(0, 1.5), class = "Intercept", dpar = "muPolska2050") +
prior(normal(0, 0.5), class = "b", dpar = "muPolska2050") +
prior(exponential(2), class = "sd", dpar = "muPolska2050") +
prior(exponential(2), class = "sds", dpar = "muPolska2050") +
prior(gamma(1, 0.01), class = "phi"),
data = polls,
seed = 780045,
iter = 5000,
chains = 6,
cores = 6,
refresh = 5,
control =
list(
adapt_delta = .95,
max_treedepth = 15
)
#####Trend plot#####
today <- interval(min(polls$midDate), Sys.Date())/years(1)
pred_dta <-
tibble(
time = seq(0, today, length.out = nrow(polls)),
date = as.Date(time*365, origin = min(polls$midDate))
)
pred_dta <-
add_fitted_draws(
model = m1,
newdata = pred_dta,
re_formula = NA
) %>%
group_by(date, .category) %>%
rename(party = .category) %>%
mutate(
party =
party %>%
factor(
levels = c("PiS", "KO", "Lewica", "Konfederacja", "DK", "PSL", "Polska2050"),
labels =
c(
"PiS",
"KO",
"Lewica",
"Konfederacja",
"Don't know",
"PSL",
"Polska 2050"
)
point_dta <-
polls[names(polls) %in% c("midDate", "PiS", "KO", "Lewica", "Konfederacja", "DK", "PSL", "Polska2050")] %>%
pivot_longer(
cols = -midDate,
names_to = "party",
values_to = "est"
) %>%
mutate(
party =
party %>%
factor(
levels = c("PiS", "KO", "Lewica", "Konfederacja", "DK", "PSL", "Polska2050"),
labels =
c(
"PiS",
"KO",
"Lewica",
"Konfederacja",
"Don't know",
"PSL",
"Polska 2050"
)
plot_trends_parl_DK <-
ggplot() +
geom_point(data=point_dta %>% filter(., party %in% c("PiS", "KO", "Don't know")),
aes(x = midDate, y = est, colour = party, fill = party), alpha = .5, size = 1, show.legend=FALSE) +
stat_lineribbon(data=pred_dta %>% filter(., party %in% c("PiS", "KO", "Don't know")),
aes(x = date, y = .value, color=party, fill=party), .width=c(0.5, 0.66, 0.95), alpha=1/4) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_date(date_breaks = "1 month",
date_labels = "%b") +
coord_cartesian(xlim = c(min(polls$midDate), max(polls$midDate)),
ylim = c(0, .5)) +
scale_color_manual(values=cols) +
scale_fill_manual(values=cols, guide=FALSE) +
labs(y = "% of vote", x="", title = "Trends (including undecided voters)",
subtitle=str_c("Data from ", names), color="", caption = "Ben Stanley (@BDStanley; benstanley.org). Model based on code written by Jack Bailey (@PoliSciJack).") +
theme_minimal() +
theme_ipsum_rc() +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme_changes
ggsave(plot_trends_parl_DK, file = "plot_trends_parl_DK.png",
width = 7, height = 5, units = "cm", dpi = 320, scale = 4)
#####Save image out#####
save.image("~/Desktop/PoolingthePoles.RData")
#####Run model by pollster#####
m1 <-
brm(formula = bf(outcome ~ 1 + s(time) + org),
family = dirichlet(link = "logit", refcat = "Other"),
prior =
prior(normal(0, 1.5), class = "Intercept", dpar = "muPiS") +
prior(normal(0, 0.5), class = "b", dpar = "muPiS") +
prior(exponential(2), class = "sds", dpar = "muPiS") +
prior(normal(0, 1.5), class = "Intercept", dpar = "muKO") +
prior(normal(0, 0.5), class = "b", dpar = "muKO") +
prior(exponential(2), class = "sds", dpar = "muKO") +
prior(normal(0, 1.5), class = "Intercept", dpar = "muLewica") +
prior(normal(0, 0.5), class = "b", dpar = "muLewica") +
prior(exponential(2), class = "sds", dpar = "muLewica") +
prior(normal(0, 1.5), class = "Intercept", dpar = "muPSL") +
prior(normal(0, 0.5), class = "b", dpar = "muPSL") +
prior(exponential(2), class = "sds", dpar = "muPSL") +
prior(normal(0, 1.5), class = "Intercept", dpar = "muKonfederacja") +
prior(normal(0, 0.5), class = "b", dpar = "muKonfederacja") +
prior(exponential(2), class = "sds", dpar = "muKonfederacja") +
prior(normal(0, 1.5), class = "Intercept", dpar = "muPolska2050") +
prior(normal(0, 0.5), class = "b", dpar = "muPolska2050") +
prior(exponential(2), class = "sds", dpar = "muPolska2050") +
prior(gamma(1, 0.01), class = "phi"),
data = polls,
seed = 780045,
iter = 5000,
backend="cmdstanr", chains=6, cores=6, threads = threading(3),
refresh = 5,
control =
list(
adapt_delta = .95,
max_treedepth = 15
)
today <- interval(min(polls$midDate), Sys.Date())/years(1)
pred_dta <-
tibble(
time = seq(0, today, length.out = nrow(polls)),
date = as.Date(time*365, origin = min(polls$midDate)),
org = polls$org
)
pred_dta <-
add_fitted_draws(
model = m1,
newdata = pred_dta
) %>%
group_by(date, .category, org) %>%
rename(party = .category) %>%
mutate(
party =
party %>%
factor(
levels = c("PiS", "KO", "Lewica", "Konfederacja", "Other", "PSL", "Polska2050"),
labels = c("PiS", "KO", "Lewica", "Konfederacja", "Other", "PSL", "Polska 2050")),
org =
org %>%
factor(
levels = c("CBOS_Mixed", "Estymator_CATI", "IBRIS_CATI", "IPSOS_CATI", "Kantar_CAPI", "Kantar_CATI", "Kantar_CAWI", "PGB Opinium_CATI", "Pollster_CATI", "Social Changes_CAWI", "United Surveys_CATI"),
labels = c("CBOS, mixed", "Estymator, CATI", "IBRIS, CATI", "IPSOS, CATI", "Kantar, CAPI", "Kantar, CATI", "Kantar, CAWI", "PGB Opinium, CATI", "Pollster, CATI", "Social Changes, CAWI", "United Surveys, CATI")
)
point_dta <- polls %>%
select(org, midDate, PiS, KO, Lewica, Konfederacja, Other, PSL, Polska2050) %>%
pivot_longer(
cols = c(-midDate, -org),
names_to = "party",
values_to = "est"
) %>%
mutate(
party =
party %>%
factor(
levels = c("PiS", "KO", "Lewica", "Konfederacja", "Other", "PSL", "Polska2050"),
labels = c("PiS", "KO", "Lewica", "Konfederacja", "Other", "PSL", "Polska 2050")),
org =
org %>%
factor(
levels = c("CBOS_Mixed", "Estymator_CATI", "IBRIS_CATI", "IPSOS_CATI", "Kantar_CAPI", "Kantar_CATI", "Kantar_CAWI", "PGB Opinium_CATI", "Pollster_CATI", "Social Changes_CAWI", "United Surveys_CATI"),
labels = c("CBOS, mixed", "Estymator, CATI", "IBRIS, CATI", "IPSOS, CATI", "Kantar, CAPI", "Kantar, CATI", "Kantar, CAWI", "PGB Opinium, CATI", "Pollster, CATI", "Social Changes, CAWI", "United Surveys, CATI")
)
plot_trends_pollster <-
ggplot() +
geom_point(data=point_dta, aes(x = midDate, y = est, colour=party, fill=party), alpha = .5, size = 1, show.legend=FALSE) +
stat_lineribbon(data=pred_dta, aes(x = date, y = .value, color=party, fill=party), .width=c(0.5, 0.66, 0.95), alpha=1/4) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_date(date_breaks = "1 month",
date_labels = "%b") +
facet_wrap(~org, nrow=3) +
coord_cartesian(xlim = c(min(polls$midDate), max(polls$midDate)),
ylim = c(0, .5)) +
scale_color_manual(values=cols) +
scale_fill_manual(values=cols, guide=FALSE) +
labs(y = "% of vote", x="", title = "Trends (by pollster)",
subtitle=str_c("Data from ", names), color="", caption = "Ben Stanley (@BDStanley; benstanley.org). Model based on code written by Jack Bailey (@PoliSciJack).") +
theme_minimal() +
theme_ipsum_rc() +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme_changes
ggsave(plot_trends_pollster , file = "plot_trends_pollster.png",
width = 7, height = 5, units = "cm", dpi = 320, scale = 4)
